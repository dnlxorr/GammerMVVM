// Generated by Dagger (https://dagger.dev).
package com.cas.gammermvvmapp.di;

import com.cas.gammermvvmapp.data.repository.AuthRepositoryImpl;
import com.cas.gammermvvmapp.domain.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAuthRepositoryFactory implements Factory<AuthRepository> {
  private final Provider<AuthRepositoryImpl> implProvider;

  public AppModule_ProvideAuthRepositoryFactory(Provider<AuthRepositoryImpl> implProvider) {
    this.implProvider = implProvider;
  }

  @Override
  public AuthRepository get() {
    return provideAuthRepository(implProvider.get());
  }

  public static AppModule_ProvideAuthRepositoryFactory create(
      Provider<AuthRepositoryImpl> implProvider) {
    return new AppModule_ProvideAuthRepositoryFactory(implProvider);
  }

  public static AuthRepository provideAuthRepository(AuthRepositoryImpl impl) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideAuthRepository(impl));
  }
}
