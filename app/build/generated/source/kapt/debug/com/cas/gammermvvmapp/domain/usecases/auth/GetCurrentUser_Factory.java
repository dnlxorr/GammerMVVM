// Generated by Dagger (https://dagger.dev).
package com.cas.gammermvvmapp.domain.usecases.auth;

import com.cas.gammermvvmapp.domain.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetCurrentUser_Factory implements Factory<GetCurrentUser> {
  private final Provider<AuthRepository> repositoryProvider;

  public GetCurrentUser_Factory(Provider<AuthRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetCurrentUser get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetCurrentUser_Factory create(Provider<AuthRepository> repositoryProvider) {
    return new GetCurrentUser_Factory(repositoryProvider);
  }

  public static GetCurrentUser newInstance(AuthRepository repository) {
    return new GetCurrentUser(repository);
  }
}
